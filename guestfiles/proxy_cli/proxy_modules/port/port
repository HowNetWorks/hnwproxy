#!/usr/bin/env bash
# script to block ports using various methods

set -e

# regex for iptables single port or range
# not comprehensive, but good enough...
SINGLE_PORT='^[0-9]+$'
PORT_RANGE='^[0-9]+:[0-9]+$'

# comment that identifies this module's iptables rules
COMMENT="port_module"

usage()
{
  echo "hnwProxy port module. Filters traffic by outgoing destination port."
  echo
  echo "USAGE"
  echo "  proxy port <single|rangeStart:rangeEnd> <action>"
  echo "  proxy port flush"
  echo "  proxy port show"
  echo
  echo "ARGUMENTS"
  echo "  single                A single port. E.g. 8080"
  echo "  rangeStart:rangeEnd   A range of ports. E.g. 560:570"
  echo "  action                Action to take:"
  echo "                         drop     drop packet"
  echo "                         rst      drop and send TCP RST"
  echo "                         icmp     drop and send icmp-admin-prohibited"
  echo "OPTIONS"
  echo "  disable               Remove active rules."
  echo "  show                  Show active rules."
}

generateRules()
{
  ip=$1        # ip version 4, 6, or 4_6
  protocol=$2  # tcp, udp, or tcp_udp
  port=$3      # port or port range
  action=$4    # iptables action
  ipv4=false
  ipv6=false

  case $ip in
    "4")
      ipv4=true
      ;;
    "6")
      ipv6=true
      ;;
    "4_6")
      ipv4=true
      ipv6=true
      ;;
  esac

  if [[ $port =~ $SINGLE_PORT ]]; then
    if [[ $protocol == tcp_udp ]]; then
      if [[ $ipv4 == true ]]; then
        iptables -A OUTPUT -p tcp --dport $port -m comment --comment "$COMMENT" $action
        iptables -A OUTPUT -p udp --dport $port -m comment --comment "$COMMENT" $action
        iptables -A FORWARD -p tcp --dport $port -m comment --comment "$COMMENT" $action
        iptables -A FORWARD -p udp --dport $port -m comment --comment "$COMMENT" $action
      fi; if [[ $ipv6 == true ]]; then
        ip6tables -A OUTPUT -p tcp --dport $port -m comment --comment "$COMMENT" $action
        ip6tables -A OUTPUT -p udp --dport $port -m comment --comment "$COMMENT" $action
        ip6tables -A FORWARD -p tcp --dport $port -m comment --comment "$COMMENT" $action
        ip6tables -A FORWARD -p udp --dport $port -m comment --comment "$COMMENT" $action
      fi
    else
      if [[ $ipv4 == true ]]; then
        iptables -A OUTPUT -p $protocol --dport $port -m comment --comment "$COMMENT" $action
        iptables -A FORWARD -p $protocol --dport $port -m comment --comment "$COMMENT" $action
      fi; if [[ $ipv6 == true ]]; then
        ip6tables -A OUTPUT -p $protocol --dport $port -m comment --comment "$COMMENT" $action
        ip6tables -A FORWARD -p $protocol --dport $port -m comment --comment "$COMMENT" $action
      fi
    fi
  elif [[ $port =~ $PORT_RANGE ]]; then
    if [[ $protocol == tcp_udp ]]; then
      if [[ $ipv4 == true ]]; then
        iptables -A OUTPUT -p tcp -m multiport --dports $port -m comment --comment "$COMMENT" $action
        iptables -A OUTPUT -p udp -m multiport --dports $port -m comment --comment "$COMMENT" $action
        iptables -A FORWARD -p tcp -m multiport --dports $port -m comment --comment "$COMMENT" $action
        iptables -A FORWARD -p udp -m multiport --dports $port -m comment --comment "$COMMENT" $action
      fi; if [[ $ipv6 == true ]]; then
        ip6tables -A OUTPUT -p tcp -m multiport --dports $port -m comment --comment "$COMMENT" $action
        ip6tables -A OUTPUT -p udp -m multiport --dports $port -m comment --comment "$COMMENT" $action
        ip6tables -A FORWARD -p tcp -m multiport --dports $port -m comment --comment "$COMMENT" $action
        ip6tables -A FORWARD -p udp -m multiport --dports $port -m comment --comment "$COMMENT" $action
      fi
    else
      if [[ $ipv4 == true ]]; then
        iptables -A OUTPUT -p $protocol -m multiport --dports $port -m comment --comment "$COMMENT" $action
        iptables -A FORWARD -p $protocol -m multiport --dports $port -m comment --comment "$COMMENT" $action
      fi; if [[ $ipv6 == true ]]; then
        ip6tables -A OUTPUT -p $protocol -m multiport --dports $port -m comment --comment "$COMMENT" $action
        ip6tables -A FORWARD -p $protocol -m multiport --dports $port -m comment --comment "$COMMENT" $action
      fi
    fi
  else
    echo "Invalid port or port range."
    exit 1
  fi
}

case "$1" in
  "")
    usage
    ;;

  "show")
    echo "Active rules:"
    echo "  IPv4"
    iptables-save | grep -v FORWARD |  grep $COMMENT | cut -d ' ' -f 4,8,14,15,16 | sed -e 's/^/    /'
    echo "  IPv6"
    ip6tables-save | grep -v FORWARD | grep $COMMENT | cut -d ' ' -f 4,8,14,15,16 | sed -e 's/^/    /'
    #                        ^ FORWARD and OUTPUT have the same rules, no need to show both
    ;;

  "flush"|"disable")
    # remove this module's rules
    iptables-save | grep -v $COMMENT | iptables-restore
    ip6tables-save | grep -v $COMMENT | ip6tables-restore
    ;;

  *)
    action=${2,,} # to lowercase

    if [[ $# -lt 2 ]]; then
      echo "Invalid option or missing action."
      exit 1

    elif [[ $action == drop ]]; then
      generateRules '4_6' 'tcp_udp' $1 '-j DROP'

    elif [[ $action == rst ]]; then
      generateRules '4_6' 'tcp' $1 '-j REJECT --reject-with tcp-reset'

    elif [[ $action == icmp ]]; then
      generateRules '4' 'tcp_udp' $1 '-j REJECT --reject-with icmp-admin-prohibited'
      generateRules '6' 'tcp_udp' $1 '-j REJECT --reject-with icmp6-adm-prohibited'
    fi
    ;;
esac
